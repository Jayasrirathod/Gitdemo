# Common Linux Commands

# Print the current working directory
pwd

# List files and directories
ls

# Change the current directory
cd <directory>

# Copy files or directories
cp <source> <destination>

# Move or rename files or directories
mv <source> <destination>

# Remove files or directories
rm <file>

# Create a new directory
mkdir <directory>

# Remove an empty directory
rmdir <directory>

# Create an empty file or update file timestamps
touch <filename>

# Concatenate and display the content of files
cat <file>

# Search for a pattern in files
grep <pattern> <file>

# Change file permissions
chmod <permissions> <file>

# Change file owner and group
chown <user>:<group> <file>

# Display information about active processes
ps

# Terminate a process
kill <process_id>

# Display system resource usage and top processes
top

# Display disk space usage
df

# Display file and directory space usage
du

# Display the manual page for a command
man <command>

# A simple text editor
nano <filename>

# A powerful text editor
vim <filename>

# Create or extract compressed archive files
tar <options> <file/directory>

# Download files from the web
wget <url>

# Connect to a remote server securely
ssh <username>@<hostname>

# Copy files between a local and remote machine
scp <source> <destination>
wq
wq
q
w
Here is the List:
$ git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.



exit()
q!
qw
wq
wq
q+
